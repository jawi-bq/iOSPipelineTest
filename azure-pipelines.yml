# https://docs.microsoft.com/azure/devops/pipelines/ecosystems/xcode
pool:
# change vm to 10.15 when after this issue will be resolved
# test
#https://github.com/microsoft/azure-pipelines-image-generation/issues/1277
  vmImage: 'macOS-10.15'
  
variables:
- group: ios_variables
- name: scheme
  value: 'iOSPipelineTest'
- name: sdk
  value: 'iphoneos'
- name: configuration
  value: 'Release'
- name: isCarthageCache
  value: 'false'
- name: xcodePath
  value: '/Applications/Xcode_12.2.app'

steps:
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'BritenetDistribution.p12'
    certPwd: '$(P12password)'
    keychain: 'temp'
    signingIdentity: 'iPhone Distribution: Britenet Sp. z o.o. (772RH2549C)'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'AzureStore.mobileprovision'

- task: Bash@3
  displayName: 'Set default Xcode'
  inputs:
    targetType: 'inline'
    script: |
      sudo xcode-select --switch ${{variables.xcodePath}}/Contents/Developer
      echo "Xcode version: "
      xcodebuild -version

- task: Cache@2
  displayName: 'Carthage cache'
  inputs:
    key: 'carthage | $(Agent.OS) | Cartfile.resolved | "$(xcodePath)"'
    restoreKeys: carthage
    path: 'Carthage'
    cacheHitVar: 'isCarthageCache'

- task: Bash@3
  displayName: 'Carthage build'
  condition: ne(variables.isCarthageCache, 'true')
  inputs:
    targetType: 'inline'
    script: ./carthage.sh update --no-use-binaries --platform iOS
    
#- task: Xcode@5
#  displayName: 'Xcode tests'
#  inputs:
#    actions: 'test'
#    configuration: 'Debug'
#    sdk: 'iphonesimulator'
#    xcWorkspacePath: 'iOSPipelineTest.xcodeproj/project.xcworkspace'
#    scheme: '$(scheme)'
#    xcodeVersion: 'specifyPath'
#    xcodeDeveloperDir: '/Applications/Xcode_11.3.app'
#    packageApp: false
#    destinationPlatformOption: 'iOS'
#    destinationSimulators: 'iPhone 11 Pro Max'
#    useXcpretty: true
#    publishJUnitResults: true
    
- task: Xcode@5
  displayName: 'Xcode Distribution build'
  inputs:
    actions: 'build'
    configuration: '$(configuration)'
    sdk: '$(sdk)'
    xcWorkspacePath: 'iOSPipelineTest.xcodeproj/project.xcworkspace'
    scheme: '$(scheme)'
    xcodeVersion: 'specifyPath'
    xcodeDeveloperDir: '$(xcodePath)'
    packageApp: true
    exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    signingOption: 'manual'
    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
    provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'
    
#- task: PublishTestResults@2
#  inputs:
#    testResultsFormat: 'JUnit'
#    testResultsFiles: 'build/reports/junit.xml'
